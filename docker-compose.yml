services:
  postgres:
    image: postgres:16-alpine
    env_file: .env
    environment:
      POSTGRES_DB: aperilex
      POSTGRES_USER: aperilex
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dev_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aperilex"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-aperilex}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-dev_password}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://aperilex:${DB_PASSWORD:-dev_password}@postgres/aperilex

      # Messaging System (New)
      ENVIRONMENT: development
      MESSAGING_ENVIRONMENT: development
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-aperilex}:${RABBITMQ_PASSWORD:-dev_password}@rabbitmq:5672/

      # Application
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-dev-encryption-key-32-characters}
      DEBUG: "true"
      EDGAR_IDENTITY: ${EDGAR_IDENTITY:-dev@aperilex.com}
      EDGAR_DATA_DIR: /tmp/edgar_data

      # LLM Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY:-dummy_openai_key}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-dummy_google_key}
      DEFAULT_LLM_PROVIDER: ${DEFAULT_LLM_PROVIDER:-openai}

    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./scripts:/app/scripts
    command: python3 -m uvicorn src.presentation.api.app:app --reload --host 0.0.0.0 --port 8000

  worker:
    build: .
    env_file: .env
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://aperilex:${DB_PASSWORD:-dev_password}@postgres/aperilex

      # Messaging System (New)
      ENVIRONMENT: development
      MESSAGING_ENVIRONMENT: development
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-aperilex}:${RABBITMQ_PASSWORD:-dev_password}@rabbitmq:5672/

      # Application
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-dev-encryption-key-32-characters}
      DEBUG: "true"
      EDGAR_IDENTITY: ${EDGAR_IDENTITY:-dev@aperilex.com}
      EDGAR_DATA_DIR: /tmp/edgar_data

      # LLM Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY:-dummy_openai_key}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-dummy_google_key}
      DEFAULT_LLM_PROVIDER: ${DEFAULT_LLM_PROVIDER:-openai}

    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./scripts:/app/scripts
    command: python3 scripts/run_worker.py --log-level INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import asyncio; import aio_pika; asyncio.run(aio_pika.connect('amqp://${RABBITMQ_USER:-aperilex}:${RABBITMQ_PASSWORD:-dev_password}@rabbitmq:5672/')); print('RabbitMQ connection successful')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  rabbitmq_data:
