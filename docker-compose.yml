services:
  postgres:
    image: postgres:16-alpine
    env_file: .env
    environment:
      POSTGRES_DB: aperilex
      POSTGRES_USER: aperilex
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dev_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aperilex"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    env_file: .env
    command: redis-server --requirepass ${REDIS_PASSWORD:-dev_password}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      DATABASE_URL: postgresql+asyncpg://aperilex:${DB_PASSWORD:-dev_password}@postgres/aperilex
      REDIS_URL: redis://:${REDIS_PASSWORD:-dev_password}@redis:6379
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD:-dev_password}@redis:6379
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD:-dev_password}@redis:6379
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-dev-encryption-key-32-characters}
      DEBUG: "true"
      EDGAR_IDENTITY: ${EDGAR_IDENTITY:-dev@aperilex.com}
      EDGAR_DATA_DIR: /tmp/edgar_data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
    command: python3 -m uvicorn src.presentation.api.app:app --reload --host 0.0.0.0 --port 8000

  celery-worker:
    build: .
    env_file: .env
    environment:
      DATABASE_URL: postgresql+asyncpg://aperilex:${DB_PASSWORD:-dev_password}@postgres/aperilex
      REDIS_URL: redis://:${REDIS_PASSWORD:-dev_password}@redis:6379
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD:-dev_password}@redis:6379
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD:-dev_password}@redis:6379
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-dev-encryption-key-32-characters}
      EDGAR_IDENTITY: ${EDGAR_IDENTITY:-dev@aperilex.com}
      EDGAR_DATA_DIR: /tmp/edgar_data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: python3 -m celery -A src.infrastructure.tasks.celery_app:celery_app worker --loglevel=INFO --queues=filing_queue,analysis_queue

  celery-beat:
    build: .
    env_file: .env
    environment:
      DATABASE_URL: postgresql+asyncpg://aperilex:${DB_PASSWORD:-dev_password}@postgres/aperilex
      REDIS_URL: redis://:${REDIS_PASSWORD:-dev_password}@redis:6379
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD:-dev_password}@redis:6379
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD:-dev_password}@redis:6379
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-dev-encryption-key-32-characters}
      EDGAR_IDENTITY: ${EDGAR_IDENTITY:-dev@aperilex.com}
      EDGAR_DATA_DIR: /tmp/edgar_data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: python3 -m celery -A src.infrastructure.tasks.celery_app:celery_app beat --loglevel=info

volumes:
  postgres_data:
